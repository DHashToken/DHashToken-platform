STEPS

1) export OST_GETH_VALUE_RPC_PROVIDER='http://localhost:8545'
   export OST_GETH_VALUE_WS_PROVIDER='ws://localhost:18545'

   export OST_GETH_UTILITY_RPC_PROVIDER='http://localhost:9546'
   export OST_GETH_UTILITY_WS_PROVIDER='ws://localhost:19546'

   export OST_REGISTRAR_PASSPHRASE=''

   export OST_FOUNDATION_ADDR=''
   export OST_REGISTRAR_ADDR=''

   export OST_SIMPLE_TOKEN_CONTRACT_ADDR=''
   export OST_STAKING_CONTRACT_ADDR=''
   export OST_UTILITY_TOKEN_CONTRACT_ADDR=''

2)  In test/open_st_env_vars.sh, verify all the addressed if known else keep it blank
    - source test/open_st_env_vars.sh

3) Setup chainId according to the environment in open_st_env_vars.sh
    - OST_VALUE_CHAIN_ID
    - OST_UTILITY_CHAIN_ID
    - source test/open_st_env_vars.sh

3) On Development only
   - cd test/
   - ./init_keys.sh
   - populate OST_FOUNDATION_ADDR(SimpleTokenFoundation), OST_REGISTRAR_ADDR(ValueChain.Admin) from config.json to test/open_st_env_vars.sh
   - source test/open_st_env_vars.sh

3) On Development only
    - Verify genesis test/poa-genesis-value.json
    - Open a new Terminal and Run
    - cd test
    - ./run_value_chain.sh

4) Verify test/poa-genesis-utility.json
   - Open a New Terminal
   - cd test
   - ./run_utility_chain.sh

6) On development only - if simple contract is not deployed
    - On value chain machine
    - source test/open_st_env_vars.sh
    - node test/deployDHashTokenOnTestNetNew.js
    - populate OST_SIMPLE_TOKEN_CONTRACT_ADDR in test/open_st_env_vars.sh from config.json

    # Deploys SimpleToken contract on value chain
    # Funds Member Companies

7) If staking contract is not deployed on production
    - On Value Chain machine
    - source test/open_st_env_vars.sh
    - node lib/deploy/staking.js
    - From contract deployment receipt populate OST_STAKING_CONTRACT_ADDR in open_st_env_vars.sh
    - Also populate staking contract address(config.Stake) in config.json

8) On Utility Chain Machine
    - source test/open_st_env_vars.sh
    - node lib/deploy/utility_token.js
    - From contract deployment receipt populate OST_UTILITY_TOKEN_CONTRACT_ADDR in open_st_env_vars.sh
    - Populate utility_token contract address(config.Members.ERC20) in config.json
    - Populate UUID(config.Members.UUID) from console in config.json

9) Open a new terminal and run
    - source test/open_st_env_vars.sh
    - node services/registrar.js

10) For staking and minting
   - source test/open_st_env_vars.sh
   - node tools/stakeAndMint.js

11) To Host APIs
    source test/open_st_env_vars.sh
    npm start
